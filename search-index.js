var searchIndex = JSON.parse('{\
"bitfrob":{"doc":"A crate to help with bit manipulation of integers.","t":[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11],"n":["borrow","borrow_mut","clone","cmp","default","eq","fmt","from","hash","high","into","low","ne","partial_cmp","try_from","try_into","type_id","u128_get_bit","u128_get_region","u128_get_value","u128_region_mask","u128_with_bit","u128_with_region","u128_with_value","u16_get_bit","u16_get_region","u16_get_value","u16_region_mask","u16_with_bit","u16_with_region","u16_with_value","u32_get_bit","u32_get_region","u32_get_value","u32_region_mask","u32_with_bit","u32_with_region","u32_with_value","u64_get_bit","u64_get_region","u64_get_value","u64_region_mask","u64_with_bit","u64_with_region","u64_with_value","u8_get_bit","u8_get_region","u8_get_value","u8_region_mask","u8_with_bit","u8_with_region","u8_with_value","u8x2","with_high","with_low"],"q":["bitfrob","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","The upper byte","Calls <code>U::from(self)</code>.","The lower byte","","","","","","Determines if the <code>b</code> bit is set in <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>, down shifted by <code>low</code>.","Generates a bit mask where all bits in the region are 1.","Replaces the <code>b</code> bit in <code>u</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code> with an input …","Determines if the <code>b</code> bit is set in <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>, down shifted by <code>low</code>.","Generates a bit mask where all bits in the region are 1.","Replaces the <code>b</code> bit in <code>u</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code> with an input …","Determines if the <code>b</code> bit is set in <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>, down shifted by <code>low</code>.","Generates a bit mask where all bits in the region are 1.","Replaces the <code>b</code> bit in <code>u</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code> with an input …","Determines if the <code>b</code> bit is set in <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>, down shifted by <code>low</code>.","Generates a bit mask where all bits in the region are 1.","Replaces the <code>b</code> bit in <code>u</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code> with an input …","Determines if the <code>b</code> bit is set in <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>.","Get the <code>low</code> to <code>high</code> bit region of <code>u</code>, down shifted by <code>low</code>.","Generates a bit mask where all bits in the region are 1.","Replaces the <code>b</code> bit in <code>u</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code>.","Replaces the <code>low</code> to <code>high</code> bit region of <code>old</code> with an input …","Two <code>u8</code> values packed as a <code>u16</code>.","Updates the upper byte value, returning the new <code>u8x2</code>","Updates the lower byte value, returning the new <code>u8x2</code>"],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],"f":[[[]],[[]],[1,1],[[1,1],2],[[],1],[[1,1],3],[[1,4],5],[[]],[1],[1,6],[[]],[1,6],[[1,1],3],[[1,1],[[7,[2]]]],[[],8],[[],8],[[],9],[[10,11],3],[[10,10,11],11],[[10,10,11],11],[[10,10],11],[[10,11,3],11],[[10,10,11,11],11],[[10,10,11,11],11],[[10,12],3],[[10,10,12],12],[[10,10,12],12],[[10,10],12],[[10,12,3],12],[[10,10,12,12],12],[[10,10,12,12],12],[[10,10],3],[[10,10,10],10],[[10,10,10],10],[[10,10],10],[[10,10,3],10],[[10,10,10,10],10],[[10,10,10,10],10],[[10,13],3],[[10,10,13],13],[[10,10,13],13],[[10,10],13],[[10,13,3],13],[[10,10,13,13],13],[[10,10,13,13],13],[[10,6],3],[[10,10,6],6],[[10,10,6],6],[[10,10],6],[[10,6,3],6],[[10,10,6,6],6],[[10,10,6,6],6],0,[[1,6],1],[[1,6],1]],"p":[[3,"u8x2"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
